#========================================================================
#========================================================================
#Pandas Groupby
#
#========================================================================
#========================================================================

import scipy as sp
import pandas as pd
import numpy as np

#Define data

data = {'Name':pd.Series(['Apple','Xiaomi','Samsung','Google','Huawei','Sony','Jack','Jenny','Angela','Kent','Alice']),
   'Founded':pd.Series([1981,1990,1998,1999,1981,1999,23,30,30,23,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8,4.0,5.0,4.0,4.0]),
   'Gender':pd.Series(['Male','Male','Female','Male','Female','Male','Female','Male','Female','Male','Female'])}

df1 = pd.DataFrame(data)
print df1
print " "
print " "

>>> df1

    Founded  Gender     Name  Rating
0      1981    Male    Apple    4.23
1      1990    Male   Xiaomi    3.24
2      1998  Female  Samsung    3.98
3      1999    Male   Google    2.56
4      1981  Female   Huawei    3.20
5      1999    Male     Sony    4.60
6        23  Female     Jack    3.80
7        30    Male    Jenny    4.00
8        30  Female   Angela    5.00
9        23    Male     Kent    4.00
10       23  Female    Alice    4.00



#list the groups of male in which rows and female in which rows

>>> print df1.groupby('Gender').groups
{'Male': Int64Index([0, 1, 3, 5, 7, 9], dtype='int64'), 'Female': Int64Index([2, 4, 6, 8, 10], dtype='int64')}

#list the groups of male in which rows and female in which rows respectively 

print df1.groupby(['Gender','Founded']).groups
{('Male', 23): Int64Index([9], dtype='int64'), ('Female', 23): Int64Index([6, 10], dtype='int64'), ('Male', 30): Int64Index([7], dtype='int64'), ('Male', 1999): Int64Index([3, 5], dtype='int64'), ('Male', 1990): Int64Index([1], dtype='int64'), ('Female', 1998): Int64Index([2], dtype='int64'), ('Female', 1981): Int64Index([4], dtype='int64'), ('Female', 30): Int64Index([8], dtype='int64'), ('Male', 1981): Int64Index([0], dtype='int64')}

#display the values of the records with readable groups

displaygrouped = df1.groupby('Gender')
for group,name in displaygrouped:
    print group
    print name

>>> for group,name in displaygrouped:
...     print group
...     print name
...
Female
    Founded  Gender     Name  Rating
2      1998  Female  Samsung    3.98
4      1981  Female   Huawei    3.20
6        23  Female     Jack    3.80
8        30  Female   Angela    5.00
10       23  Female    Alice    4.00
Male
   Founded Gender    Name  Rating
0     1981   Male   Apple    4.23
1     1990   Male  Xiaomi    3.24
3     1999   Male  Google    2.56
5     1999   Male    Sony    4.60
7       30   Male   Jenny    4.00
9       23   Male    Kent    4.00

#display the values of the records with specific readable groups

print displaygrouped.get_group('Female')

>>> print displaygrouped.get_group('Female')
    Founded  Gender     Name  Rating
2      1998  Female  Samsung    3.98
4      1981  Female   Huawei    3.20
6        23  Female     Jack    3.80
8        30  Female   Angela    5.00
10       23  Female    Alice    4.00
>>>


#aggregation with mean and sum and count

displaygrouped = df1.groupby('Gender')
print displaygrouped['Rating'].agg(np.mean)
print displaygrouped['Rating'].agg(np.sum)



>>> print displaygrouped['Rating'].agg(np.mean)
Gender
Female    3.996000
Male      3.771667
Name: Rating, dtype: float64
>>> print displaygrouped['Rating'].agg(np.sum)
Gender
Female    19.98
Male      22.63
Name: Rating, dtype: float64
>>>

print displaygrouped['Rating'].agg(np.size)
Gender
Female    5.0
Male      6.0


#Transform is adding the groupby final result to the column of those respective row
#Combine

df1["Gender_SUM"] = df1.groupby('Gender')["Rating"].transform('sum')



>>> df1["Gender_SUM"] = df1.groupby('Gender')["Rating"].transform('sum')
>>> df1["Percent_of_Rating"] = df1["Rating"] / df1["Gender_SUM"]
>>> df1
    Founded  Gender     Name  Rating  Gender_SUM  Percent_of_Rating
0      1981    Male    Apple    4.23       22.63           0.186920
1      1990    Male   Xiaomi    3.24       22.63           0.143173
2      1998  Female  Samsung    3.98       19.98           0.199199
3      1999    Male   Google    2.56       22.63           0.113124
4      1981  Female   Huawei    3.20       19.98           0.160160
5      1999    Male     Sony    4.60       22.63           0.203270
6        23  Female     Jack    3.80       19.98           0.190190
7        30    Male    Jenny    4.00       22.63           0.176757
8        30  Female   Angela    5.00       19.98           0.250250
9        23    Male     Kent    4.00       22.63           0.176757
10       23  Female    Alice    4.00       19.98           0.200200

